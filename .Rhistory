install.packages("tidyverse")
install.packages("dplyr")
library("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("tidyverse")
install.packages("xml2")
install.packages("rvest")
install.packages("tidyverse")
library(tidyverse)
library(dplyr)
library(tidyverse)
install.packages("keras")
# Try extrantsr::MALF.
# Let's skull strip and extract brain tissue.
# It takes around 13.04965 mins per image with 5 registered templates.
library(neurobase)
library(malf.templates)
?malf_template_brains
?malf_tempalte
?malf_template_masks
?malf_templates
oasis.templates
library(oasis.tempaltes)
library(neurobase)
library(ggplot2)
library(tensorflow)
library(keras)
library(foreach)
library(doParallel)
registerDoParallel(16)
# Create sequential model
model <- keras_model_sequential()
model %>% layer_conv_3d(32, kernel_size = c(1,1), input_shape=c('None', '176', '256', '256'))
# Create sequential model
model <- keras_model_sequential()
model %>% layer_conv_3d(32, kernel_size = c(1,1,1), input_shape=c('None', '176', '256', '256', '2'))
install.packages("keras")
library(keras)
install_keras()
library(neurobase)
library(ggplot2)
library(tensorflow)
library(keras)
library(abind)
library(foreach)
library(doParallel)
registerDoParallel(16)
# Remove unwanted files to save memory.
remove(cn_all, ad_all)
library(neurobase)
library(tensorflow)
library(keras)
library(abind)
?layer_conv_3d
library(neurobase)
library(ggplot2)
library(dplyr)
library(stringr)
cn_2D <- list.files("/home/dthomas/AD/2D/CN/")
library(neurobase)
library(imager)
library(png)
library(parallel)
library(doParallel)
library(stringr)
setwd("/home/dthomas/AD/")
registerDoParallel(16)
ad <- list.files("3T_extracted_ad/")
cn <- list.files("3T_extracted_cn/")
nifti_names <- c()
for(nifti_file_name in cn)
{
sub <- str_extract(nifti_file_name, '(OAS\\d*)')
ses <- str_extract(nifti_file_name, '(d\\d*)')
run <- str_extract(nifti_file_name, '(run-\\d*)')
folder_name <- paste(sub, "_", ses, run, sep="")
nifti_names <- c(nifti_names, folder_name)
}
duplicates <- nifti_names[duplicated(nifti_names)]
duplicates
mri_sessions <- read.csv("csv/mr_sessions.csv")
mri_3T <- mri_sessions %>%
filter(mri_sessions$Scanner == '3.0T')
View(mri_sessions)
shiny::runApp('scripts/AD')
